### Basic Settings
 
# интерпретатор команд оболочки
set shell zsh
set shellopts '-euy'
set ifs "\n"
set filesep "\n"  # default already
 
# оставьте немного места вверху и внизу экрана
set scrolloff 10
 
set hidden true
set ignorecase true
set drawbox
set icons true
set colors true

# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

# Новая папка с выбранными элементам. Функция, аналогичная macOS Finder
cmd newfold ${{
  set -f
  printf "Directory Name: "
  read newd
  mkdir -- "$newd"
  mv -- $fx "$newd"
}}  
 
# Динамически устанавливаемое количество столбцов
cmd recol ${{
    w=$(tput cols)
    if [ $w -le 85 ]; then
        lf -remote "send $id set ratios 1:2"
    elif [ $w -le 160 ]; then
        lf -remote "send $id set ratios 1:2:3"
    else
        lf -remote "send $id set ratios 1:2:3:5"
    fi
}} 
recol

# define a custom 'open' command
cmd open ${{
 test -L $f && f=$(readlink -f $f)
 case $(file --mime-type $f -b) in
 text/*) $EDITOR $fx;;
 *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
 esac
}}

# make sure trash folder exists
%mkdir -p ~/.trash

# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
cmd trash %set -f; mv $fx ~/.trash

# use '<delete>' key for either 'trash' or 'delete' command
# map <delete> trash
# map <delete> delete
 
# define a custom 'delete' command
cmd delete ${{
  set -f
  printf "$fx\n"
  printf "Delete? [y/n]"
  read ans
  [ $ans = "y" ] && rm -rf $fx
}}
 
 # Archive extract the current file with the right command
cmd extract ${{
  set -f
  color_red() { echo -e "\n\033[31m$2\033[0m"; }
  color_yellow() { echo -e "\n\033[33m$2\033[0m"; }
  color_green() { echo -e "\n\033[32m$1\033[0m"; }
  if [[ -f "$f" ]] ; then
    name_dir="${f/.*}"
    mkdir -p "$name_dir"
    case $f in
     *.tar.bz2) tar xvjf $f -C "$name_dir"   ;;
     *.tar.gz)  tar xvzf $f -C "$name_dir"   ;;
     *.tar.xz)  tar xvjf $f -C "$name_dir"   ;;
     *.bz2)     tar xvjf $f -C "$name_dir"   ;;
     *.tar)     tar xvf $f -C "$name_dir"    ;;
     *.tbz2)    tar xvjf $f -C "$name_dir"   ;;
     *.tgz)     tar xvzf $f -C "$name_dir"   ;;
     *.rar)     unrar e $f "$name_dir"       ;;
     *.zip)     unzip $f -d "$name_dir"      ;;
     *.7z)      7z x $f -o "$name_dir"       ;;
     *) color_red "$f Неизвестный метод сжатия файлов" ;;
    esac
    color_green "$f распакован в $name_dir"
  else
    color_yellow "$f не является архивом !!!"
  fi
}}

# Bindings
# Remove some defaults
map M
map m
map o
map n
map "'"
map '"'
map d
map e
  
# Bindings
map ex extract
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map R recol
map C clear
map mf mkfile
map md mkdir
map <a-m> newfold # Новая папка с выбранными элементам. Функция, аналогичная macOS Finder
map MM newfold # Новая папка с выбранными элементам. Функция, аналогичная macOS Finder

# Movement
map gd cd ~/Documents
map gD cd ~/Downloads
map gp cd ~/Pictures
map gc cd ~/.config
map gs cd ~/.local/bin
